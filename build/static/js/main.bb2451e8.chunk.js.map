{"version":3,"sources":["redux/constant.js","redux/actions/count.js","containers/Count/index.jsx","containers/Person/index.jsx","redux/actions/person.js","App.jsx","redux/reducers/person.js","redux/reducers/index.js","redux/reducers/count.js","redux/store.js","index.js"],"names":["INCREMENT","DECREMENT","ADD_PERSON","createIncrementAction","data","type","Count","increment","value","selectNumber","props","decrement","incrementIfOdd","count","incrementAsync","this","personNum","ref","currentNode","onClick","Component","connect","state","sum","persons","length","time","dispatch","setTimeout","Person","addPerson","name","nameNode","age","ageNode","personObj","id","nanoid","c","placeholder","personArr","map","p","App","initState","combineReducers","preState","action","undefined","createStore","allReducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.bb2451e8.chunk.js","sourcesContent":["// 该模块用于定义action对象中type类型的常量值\r\n\r\nexport const INCREMENT = 'increment';\r\nexport const DECREMENT = 'decrement';\r\nexport const ADD_PERSON = 'add_person';\r\n","// 该文件专门为Count组件生成action对象\r\nimport { INCREMENT, DECREMENT } from '../constant';\r\n// import store from './store';\r\n\r\n// 异步action：action的值为对象\r\nexport const createIncrementAction = data => ({ type: INCREMENT, data });\r\nexport const createDecrementAction = data => ({ type: DECREMENT, data });\r\n\r\n// 异步action：action的值为函数,异步action一般都会调用同步action\r\n// 异步action不是必须要用\r\nexport const createIncrementAsyncAction = (data, time) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(createIncrementAction(data));\r\n        }, time);\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n    createIncrementAction,\r\n    createDecrementAction,\r\n    createIncrementAsyncAction,\r\n} from '../../redux/actions/count';\r\n// 引入connect用于连接UI组件和redux\r\nimport { connect } from 'react-redux';\r\n\r\n// 定义UI组件\r\nclass Count extends Component {\r\n    // 加法\r\n    increment = () => {\r\n        const { value } = this.selectNumber;\r\n        this.props.increment(value * 1);\r\n    };\r\n    // 减法\r\n    decrement = () => {\r\n        const { value } = this.selectNumber;\r\n        this.props.decrement(value * 1);\r\n    };\r\n    // 奇数再加\r\n    incrementIfOdd = () => {\r\n        const { value } = this.selectNumber;\r\n        if (this.props.count % 2 !== 0) {\r\n            this.props.increment(value * 1);\r\n        }\r\n    };\r\n    // 异步加\r\n    incrementAsync = () => {\r\n        const { value } = this.selectNumber;\r\n        this.props.incrementAsync(value * 1, 1000);\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>当前求和为：{this.props.count}</h1>\r\n                <h1>当前总人数为：{this.props.personNum}</h1>\r\n                <select ref={currentNode => (this.selectNumber = currentNode)}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>\r\n                &nbsp;&nbsp;\r\n                <button onClick={this.increment}>+</button>&nbsp;&nbsp;\r\n                <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\r\n                <button onClick={this.incrementIfOdd}>当前求和为奇数再加</button>&nbsp;&nbsp;\r\n                <button onClick={this.incrementAsync}>异步加</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// 创建并暴露Count的容器组件\r\nexport default connect(state => ({ count: state.sum, personNum: state.persons.length }), {\r\n    increment: createIncrementAction,\r\n    decrement: createDecrementAction,\r\n    incrementAsync: createIncrementAsyncAction,\r\n})(Count);\r\n","import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { connect } from 'react-redux';\r\nimport { createAddPersonAction } from '../../redux/actions/person';\r\n\r\nclass Person extends Component {\r\n    addPerson = () => {\r\n        const name = this.nameNode.value;\r\n        const age = this.ageNode.value * 1;\r\n        const personObj = { id: nanoid(), name, age };\r\n        // console.log(personObj);\r\n        this.props.addPerson(personObj);\r\n        this.nameNode.value = '';\r\n        this.ageNode.value = '';\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>当前求和为：{this.props.count}</h1>\r\n                <input ref={c => (this.nameNode = c)} type=\"text\" placeholder=\"输入姓名\" />\r\n                &nbsp;\r\n                <input ref={c => (this.ageNode = c)} type=\"text\" placeholder=\"输入年龄\" />\r\n                <button onClick={this.addPerson}>添加</button>\r\n                <ul>\r\n                    {this.props.personArr.map(p => {\r\n                        return (\r\n                            <li key={p.id}>\r\n                                姓名：{p.name}------年龄：{p.age}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        personArr: state.persons,\r\n        count: state.sum,\r\n    }),\r\n    { addPerson: createAddPersonAction }\r\n)(Person);\r\n","import { ADD_PERSON } from '../constant';\r\n\r\n// 创建增加一个人的action\r\nexport const createAddPersonAction = personObj => ({\r\n    type: ADD_PERSON,\r\n    data: personObj,\r\n});\r\n","import React, { Component } from 'react';\r\n// 引入Count的容器组件\r\nimport Count from './containers/Count';\r\n// 引入Person的容器组件\r\nimport Person from './containers/Person';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Count />\r\n                <hr />\r\n                <Person />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { ADD_PERSON } from '../constant';\r\n\r\n// 初始化人的列表\r\nconst initState = [{ id: '001', name: 'Jack', age: 18 }];\r\n\r\nexport default function personReducer(preState = initState, action) {\r\n    const { type, data } = action;\r\n    switch (type) {\r\n        case ADD_PERSON:\r\n            return [data, ...preState];\r\n        default:\r\n            return preState;\r\n    }\r\n}\r\n","// 该文件用于汇总所有的reducer\r\n\r\nimport { combineReducers } from 'redux';\r\n// 引入为Count组件服务的reducer\r\nimport countReducer from './count';\r\n// 引入为Person组件服务的reducer\r\nimport personReducer from './person';\r\n\r\nexport default combineReducers({\r\n    sum: countReducer,\r\n    persons: personReducer,\r\n});\r\n","// 该文件创建一个为Count组件服务的reducer，reducer本质是一个函数\r\n// reducer函数接收两个参数，之前的状态preState，动作对象action\r\n\r\nimport { INCREMENT, DECREMENT } from '../constant';\r\n\r\n// 设定初始化状态为0.\r\nconst initState = 0;\r\n\r\n// 若preState为undefined，则传入initState\r\nexport default function countReducer(preState = initState, action) {\r\n    // console.log(preState, action);\r\n    if (preState === undefined) preState = 0;\r\n    // 从action对象中获取type，data\r\n    const { type, data } = action;\r\n    // 根据type决定如何加工数据\r\n    switch (type) {\r\n        case INCREMENT:\r\n            return preState + data;\r\n        case DECREMENT:\r\n            return preState - data;\r\n        // 初始化动作\r\n        default:\r\n            return preState;\r\n    }\r\n}\r\n","// 该文件专门用于暴露一个store对象，真个文档只有一个store对象\r\n\r\n// 引入createStore\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport allReducers from './reducers';\r\n\r\n// 引入redux-devtools-extension\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// 暴露store\r\nexport default createStore(allReducers, composeWithDevTools(applyMiddleware(thunk)));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.jsx';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    // Provider包裹App，目的：让App所有的后代容器组件都能接收到store\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}